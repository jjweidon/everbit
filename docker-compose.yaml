version: '3.8'

services:
  # 데이터베이스
  postgres:
    image: postgres:15
    container_name: everbit-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: everbit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7
    container_name: everbit-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: everbit-zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: everbit-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "trading-signals:1:1,market-data:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  # 애플리케이션 서버
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: everbit-app
    ports:
      - "8080:8080"  # Spring Boot
      - "3000:3000"  # Next.js
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/everbit
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - UPBIT_ACCESS_KEY=${UPBIT_ACCESS_KEY}
      - UPBIT_SECRET_KEY=${UPBIT_SECRET_KEY}
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
    depends_on:
      - postgres
      - redis
      - kafka
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 